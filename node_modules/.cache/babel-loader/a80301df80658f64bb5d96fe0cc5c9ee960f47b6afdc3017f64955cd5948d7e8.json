{"ast":null,"code":"import Particles,{initParticlesEngine}from\"@tsparticles/react\";import{useEffect,useMemo,useState}from\"react\";import{loadSlim}from\"@tsparticles/slim\";import{jsx as _jsx}from\"react/jsx-runtime\";const ParticlesComponent=props=>{const[init,setInit]=useState(false);useEffect(()=>{initParticlesEngine(async engine=>{await loadSlim(engine);}).then(()=>{setInit(true);});},[]);const particlesLoaded=container=>{console.log(container);};const options=useMemo(()=>({background:{color:{value:\"#000\"}},fpsLimit:120,interactivity:{events:{onClick:{enable:true,mode:\"repulse\"},onHover:{enable:true,mode:'grab'}},modes:{push:{distance:200,duration:15},grab:{distance:150}}},particles:{color:{value:\"#FFFFFF\"},links:{color:\"#FFFFFF\",distance:150,enable:true,opacity:0.3,width:1},move:{direction:\"none\",enable:true,outModes:{default:\"bounce\"},random:true,speed:5,straight:false},number:{density:{enable:true},value:250},opacity:{value:1.0},shape:{type:\"circle\"},size:{value:{min:1,max:3}}},detectRetina:true}),[]);return/*#__PURE__*/_jsx(Particles,{id:props.id,init:particlesLoaded,options:options});};export default ParticlesComponent;","map":{"version":3,"names":["Particles","initParticlesEngine","useEffect","useMemo","useState","loadSlim","jsx","_jsx","ParticlesComponent","props","init","setInit","engine","then","particlesLoaded","container","console","log","options","background","color","value","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","push","distance","duration","grab","particles","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","shape","type","size","min","max","detectRetina","id"],"sources":["/Users/itmamkhan/Documents/CS/ReactJS/Personal-Portfolio/src/components/ParticlesBackground.js"],"sourcesContent":["import Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport { loadSlim } from \"@tsparticles/slim\";\n\nconst ParticlesComponent = (props) => {\n\n  const [init, setInit] = useState(false);\n\n  useEffect(() => {\n    initParticlesEngine(async (engine) => {\n\n      await loadSlim(engine);\n\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n\n\n  const options = useMemo(\n    () => ({\n        background: {\n          color: {\n            value: \"#000\",\n          },\n        },\n        fpsLimit: 120,\n        interactivity: {\n          events: {\n            onClick: {\n              enable: true,\n              mode: \"repulse\",\n            },\n            onHover: {\n              enable: true,\n              mode: 'grab',\n            },\n          },\n          modes: {\n            push: {\n              distance: 200,\n              duration: 15,\n            },\n            grab: {\n              distance: 150,\n            },\n          },\n        },\n        particles: {\n          color: {\n            value: \"#FFFFFF\",\n          },\n          links: {\n            color: \"#FFFFFF\",\n            distance: 150,\n            enable: true,\n            opacity: 0.3,\n            width: 1,\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outModes: {\n              default: \"bounce\",\n            },\n            random: true,\n            speed: 5,\n            straight: false,\n          },\n          number: {\n            density: {\n              enable: true,\n            },\n            value: 250,\n          },\n          opacity: {\n            value: 1.0,\n          },\n          shape: {\n            type: \"circle\",\n          },\n          size: {\n            value: { min: 1, max: 3 },\n          },\n        },\n        detectRetina: true,\n      }),\n    [],\n  );\n\n\n  return <Particles id={props.id} init={particlesLoaded} options={options} />;\n};\n\nexport default ParticlesComponent;"],"mappings":"AAAA,MAAO,CAAAA,SAAS,EAAIC,mBAAmB,KAAQ,oBAAoB,CACnE,OAASC,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CAEpD,OAASC,QAAQ,KAAQ,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE7C,KAAM,CAAAC,kBAAkB,CAAIC,KAAK,EAAK,CAEpC,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGP,QAAQ,CAAC,KAAK,CAAC,CAEvCF,SAAS,CAAC,IAAM,CACdD,mBAAmB,CAAC,KAAO,CAAAW,MAAM,EAAK,CAEpC,KAAM,CAAAP,QAAQ,CAACO,MAAM,CAAC,CAExB,CAAC,CAAC,CAACC,IAAI,CAAC,IAAM,CACZF,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,eAAe,CAAIC,SAAS,EAAK,CACrCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC,CACxB,CAAC,CAGD,KAAM,CAAAG,OAAO,CAAGf,OAAO,CACrB,KAAO,CACHgB,UAAU,CAAE,CACVC,KAAK,CAAE,CACLC,KAAK,CAAE,MACT,CACF,CAAC,CACDC,QAAQ,CAAE,GAAG,CACbC,aAAa,CAAE,CACbC,MAAM,CAAE,CACNC,OAAO,CAAE,CACPC,MAAM,CAAE,IAAI,CACZC,IAAI,CAAE,SACR,CAAC,CACDC,OAAO,CAAE,CACPF,MAAM,CAAE,IAAI,CACZC,IAAI,CAAE,MACR,CACF,CAAC,CACDE,KAAK,CAAE,CACLC,IAAI,CAAE,CACJC,QAAQ,CAAE,GAAG,CACbC,QAAQ,CAAE,EACZ,CAAC,CACDC,IAAI,CAAE,CACJF,QAAQ,CAAE,GACZ,CACF,CACF,CAAC,CACDG,SAAS,CAAE,CACTd,KAAK,CAAE,CACLC,KAAK,CAAE,SACT,CAAC,CACDc,KAAK,CAAE,CACLf,KAAK,CAAE,SAAS,CAChBW,QAAQ,CAAE,GAAG,CACbL,MAAM,CAAE,IAAI,CACZU,OAAO,CAAE,GAAG,CACZC,KAAK,CAAE,CACT,CAAC,CACDC,IAAI,CAAE,CACJC,SAAS,CAAE,MAAM,CACjBb,MAAM,CAAE,IAAI,CACZc,QAAQ,CAAE,CACRC,OAAO,CAAE,QACX,CAAC,CACDC,MAAM,CAAE,IAAI,CACZC,KAAK,CAAE,CAAC,CACRC,QAAQ,CAAE,KACZ,CAAC,CACDC,MAAM,CAAE,CACNC,OAAO,CAAE,CACPpB,MAAM,CAAE,IACV,CAAC,CACDL,KAAK,CAAE,GACT,CAAC,CACDe,OAAO,CAAE,CACPf,KAAK,CAAE,GACT,CAAC,CACD0B,KAAK,CAAE,CACLC,IAAI,CAAE,QACR,CAAC,CACDC,IAAI,CAAE,CACJ5B,KAAK,CAAE,CAAE6B,GAAG,CAAE,CAAC,CAAEC,GAAG,CAAE,CAAE,CAC1B,CACF,CAAC,CACDC,YAAY,CAAE,IAChB,CAAC,CAAC,CACJ,EACF,CAAC,CAGD,mBAAO7C,IAAA,CAACP,SAAS,EAACqD,EAAE,CAAE5C,KAAK,CAAC4C,EAAG,CAAC3C,IAAI,CAAEI,eAAgB,CAACI,OAAO,CAAEA,OAAQ,CAAE,CAAC,CAC7E,CAAC,CAED,cAAe,CAAAV,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}