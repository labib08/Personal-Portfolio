{"ast":null,"code":"import{useEffect,useState}from'react';import Col from\"react-bootstrap/Col\";import Container from\"react-bootstrap/Container\";import Row from\"react-bootstrap/Row\";import emailImg from\"../assets/img/email-svgrepo-com.svg\";import timeImg from\"../assets/img/iconmonstr-clock-thin.svg\";import locationImg from\"../assets/img/location-pin-svgrepo-com.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const HomePage=()=>{const date=new Date();let hours=date.getHours();const minutes=date.getMinutes();const seconds=date.getSeconds();const ampm=hours>=12?'PM':'AM';hours=hours%12||12;const formattedHours=hours<10?'0'+hours:hours;const formattedMinutes=minutes<10?'0'+minutes:minutes;const formattedSeconds=seconds<10?'0'+seconds:seconds;const showTime=formattedHours+':'+formattedMinutes+' '+ampm;const[index,setIndex]=useState(0);const[render,setRender]=useState(false);const[invisible,setInvisible]=useState(false);const description=[\"Software Engineer\",\"Full-Stack Developer\",\"University of Melbourne\",\"Melbourne Space Program\"];const[text,setText]=useState('');const[timeGap,setTimeGap]=useState(50);const time=1000;const[melbourneTime,setMelbourneTime]=useState('');useEffect(()=>{const getTime=()=>{const melbDate=new Date().toLocaleString('en-US',{timeZone:'Australia/Melbourne'});let melbHours=date.getHours();const melbMinutes=date.getMinutes();const melbSeconds=date.getSeconds();const melbAmPm=melbHours>=12?'PM':'AM';melbHours=melbHours%12||12;const melbFormattedHours=melbHours<10?'0'+melbHours:melbHours;const melbFormattedMinutes=melbMinutes<10?'0'+melbMinutes:melbMinutes;const melbShowTime=melbFormattedHours+':'+melbFormattedMinutes+' '+melbAmPm;setMelbourneTime(melbShowTime);};const interval=setInterval(getTime,1000);return()=>clearInterval(interval);},[]);useEffect(()=>{let helper_func=setInterval(()=>{pause();},timeGap);return()=>{clearInterval(helper_func);};},[text]);const pause=()=>{let i=index%description.length;let renderText=description[i];let newText=render?renderText.substring(0,text.length-1):renderText.substring(0,text.length+1);setText(newText);if(render){setTimeGap(prevTimeGap=>prevTimeGap/2);}if(!render&&newText===renderText){setRender(true);setTimeGap(time);}else if(render&&newText===''){setRender(false);setIndex(index+1);setTimeGap(50);setText('.');}};const[isVisible,setIsVisible]=useState(true);useEffect(()=>{const timer=setTimeout(()=>{setIsVisible(!isVisible);},500);return()=>clearTimeout(timer);},[isVisible]);return/*#__PURE__*/_jsx(\"section\",{className:\"homePage\",id:\"home\",children:/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"align-items-center\",children:/*#__PURE__*/_jsxs(Col,{children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\" \",/*#__PURE__*/_jsx(\"span\",{children:\"Itmam Khan Labib \"})]}),/*#__PURE__*/_jsxs(\"h2\",{children:[/*#__PURE__*/_jsx(\"span\",{children:text}),/*#__PURE__*/_jsx(\"span\",{id:\"underscore\",children:\"_\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"loc-time-email-logo\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"img\",{src:locationImg,className:\"location-logo\",alt:\"\"}),\"   Melbourne, Victoria, Australia\"]})}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"img\",{src:timeImg,className:\"location-logo\",alt:\"\"}),\"   \",showTime]})}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(\"img\",{src:emailImg,className:\"location-logo\",alt:\"\"}),\"   iklabib49@gmail.com\"]})})]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Hi I am currently studying Computer Science at the University of Melbourne. \",/*#__PURE__*/_jsx(\"br\",{}),\"My interests lie in watching Cricket and Football. I have an obsession \",/*#__PURE__*/_jsx(\"br\",{}),\"for wrist watches. \"]})]})})})});};export default HomePage;","map":{"version":3,"names":["useEffect","useState","Col","Container","Row","emailImg","timeImg","locationImg","jsx","_jsx","jsxs","_jsxs","HomePage","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ampm","formattedHours","formattedMinutes","formattedSeconds","showTime","index","setIndex","render","setRender","invisible","setInvisible","description","text","setText","timeGap","setTimeGap","time","melbourneTime","setMelbourneTime","getTime","melbDate","toLocaleString","timeZone","melbHours","melbMinutes","melbSeconds","melbAmPm","melbFormattedHours","melbFormattedMinutes","melbShowTime","interval","setInterval","clearInterval","helper_func","pause","i","length","renderText","newText","substring","prevTimeGap","isVisible","setIsVisible","timer","setTimeout","clearTimeout","className","id","children","src","alt"],"sources":["/Users/itmamkhan/Documents/CS/ReactJS/Personal-Portfolio/src/components/HomePage.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport emailImg from \"../assets/img/email-svgrepo-com.svg\";\nimport timeImg from \"../assets/img/iconmonstr-clock-thin.svg\";\nimport locationImg from \"../assets/img/location-pin-svgrepo-com.svg\";\nconst HomePage = () => {\n\n    const date = new Date();\n    let hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n\n    const ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12 || 12;\n\n    const formattedHours = hours < 10 ? '0' + hours : hours;\n    const formattedMinutes = minutes < 10 ? '0' + minutes : minutes;\n    const formattedSeconds = seconds < 10 ? '0' + seconds : seconds;\n\n    const showTime = formattedHours + ':' + formattedMinutes + ' ' + ampm;\n\n    const [index, setIndex] = useState(0);\n    const [render, setRender] = useState(false);\n    const [invisible, setInvisible] = useState(false);\n    const description = [\"Software Engineer\", \"Full-Stack Developer\", \"University of Melbourne\", \"Melbourne Space Program\"];\n    const [text, setText] = useState('');\n    const [timeGap, setTimeGap] = useState(50);\n    const time = 1000;\n\n    const [melbourneTime, setMelbourneTime] = useState('');\n\n    useEffect(() => {\n        const getTime = () => {\n        const melbDate = new Date().toLocaleString('en-US', { timeZone: 'Australia/Melbourne'});\n\n        let melbHours = date.getHours();\n        const melbMinutes = date.getMinutes();\n        const melbSeconds = date.getSeconds();\n\n        const melbAmPm = melbHours >= 12 ? 'PM' : 'AM';\n        melbHours = melbHours % 12 || 12;\n\n        const melbFormattedHours = melbHours < 10 ? '0' + melbHours : melbHours;\n        const melbFormattedMinutes = melbMinutes < 10 ? '0' + melbMinutes : melbMinutes;\n\n        const melbShowTime = melbFormattedHours + ':' + melbFormattedMinutes + ' ' + melbAmPm;\n\n        setMelbourneTime(melbShowTime);\n        };\n\n        const interval = setInterval(getTime, 1000);\n\n        return () => clearInterval(interval);\n    }, []);\n\n    useEffect(() => {\n        let helper_func = setInterval(() => {\n            pause();\n        }, timeGap)\n\n        return () => {clearInterval(helper_func)};\n    }, [text]);\n\n    const pause = () => {\n        let i = index % description.length;\n        let renderText = description[i];\n        let newText = render ? renderText.substring(0, text.length -1) : renderText.substring(0, text.length + 1);\n\n        setText(newText);\n\n        if (render) {\n            setTimeGap(prevTimeGap => prevTimeGap/2);\n        }\n\n        if (!render && newText === renderText) {\n            setRender(true);\n            setTimeGap(time);\n\n        }\n        else if (render && newText === '') {\n            setRender(false);\n            setIndex(index +1);\n\n            setTimeGap(50);\n\n            setText('.');\n        }\n    }\n    const [isVisible, setIsVisible] = useState(true);\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n        setIsVisible(!isVisible);\n        }, 500);\n\n        return () => clearTimeout(timer);\n    }, [isVisible]);\n\n    return (\n        <section className = \"homePage\" id = \"home\">\n\n            <Container>\n\n                <Row className = \"align-items-center\">\n\n                    <Col >\n\n                        <h1> <span>Itmam Khan Labib </span></h1>\n                        <h2>\n                        <span>{text}</span>\n                        <span id = \"underscore\" >_</span>\n                        </h2>\n                        <div className='loc-time-email-logo'>\n                        <p><span><img src = {locationImg} className='location-logo' alt = \"\"/>   Melbourne, Victoria, Australia</span></p>\n                        <p><span><img src = {timeImg} className='location-logo' alt = \"\"/>   {showTime}</span></p>\n                        <p><span><img src = {emailImg} className='location-logo' alt = \"\"/>   iklabib49@gmail.com</span></p>\n                        </div>\n                        <p>Hi I am currently studying Computer Science at the University of Melbourne. <br/>My interests lie in watching Cricket and Football. I have an obsession <br/>for wrist watches. </p>\n\n                    </Col>\n\n                </Row>\n            </Container>\n        </section>\n    )\n}\n\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}