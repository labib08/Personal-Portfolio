{"ast":null,"code":"var _jsxFileName = \"/Users/itmamkhan/Documents/CS/ReactJS/Personal-Portfolio/src/components/ParticlesBackground.js\",\n  _s = $RefreshSig$();\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { loadSlim } from \"@tsparticles/slim\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticlesComponent = props => {\n  _s();\n  const [init, setInit] = useState(false);\n  useEffect(() => {\n    initParticlesEngine(async engine => {\n      await loadSlim(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n  const particlesLoaded = container => {\n    console.log(container);\n  };\n  const options = useMemo(() => ({\n    background: {\n      color: {\n        value: rgb(37, 37, 37)\n      }\n    },\n    fpsLimit: 120,\n    interactivity: {\n      events: {\n        onClick: {\n          enable: true,\n          mode: \"repulse\"\n        },\n        onHover: {\n          enable: true,\n          mode: 'grab'\n        }\n      },\n      modes: {\n        push: {\n          distance: 200,\n          duration: 15\n        },\n        grab: {\n          distance: 150\n        }\n      }\n    },\n    particles: {\n      color: {\n        value: \"#FFFFFF\"\n      },\n      links: {\n        color: \"#FFFFFF\",\n        distance: 150,\n        enable: true,\n        opacity: 0.3,\n        width: 1\n      },\n      move: {\n        direction: \"none\",\n        enable: true,\n        outModes: {\n          default: \"bounce\"\n        },\n        random: true,\n        speed: 1,\n        straight: false\n      },\n      number: {\n        density: {\n          enable: true\n        },\n        value: 150\n      },\n      opacity: {\n        value: 1.0\n      },\n      shape: {\n        type: \"circle\"\n      },\n      size: {\n        value: {\n          min: 1,\n          max: 3\n        }\n      }\n    },\n    detectRetina: true\n  }), []);\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    id: props.id,\n    init: particlesLoaded,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n};\n_s(ParticlesComponent, \"eB+NWpxmGZSqHQDaTSx/Qv0E/5M=\");\n_c = ParticlesComponent;\nexport default ParticlesComponent;\nvar _c;\n$RefreshReg$(_c, \"ParticlesComponent\");","map":{"version":3,"names":["Particles","initParticlesEngine","useEffect","useMemo","useState","loadSlim","jsxDEV","_jsxDEV","ParticlesComponent","props","_s","init","setInit","engine","then","particlesLoaded","container","console","log","options","background","color","value","rgb","fpsLimit","interactivity","events","onClick","enable","mode","onHover","modes","push","distance","duration","grab","particles","links","opacity","width","move","direction","outModes","default","random","speed","straight","number","density","shape","type","size","min","max","detectRetina","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/itmamkhan/Documents/CS/ReactJS/Personal-Portfolio/src/components/ParticlesBackground.js"],"sourcesContent":["import Particles, { initParticlesEngine } from \"@tsparticles/react\";\nimport { useEffect, useMemo, useState } from \"react\";\n\nimport { loadSlim } from \"@tsparticles/slim\";\n\nconst ParticlesComponent = (props) => {\n\n  const [init, setInit] = useState(false);\n\n  useEffect(() => {\n    initParticlesEngine(async (engine) => {\n\n      await loadSlim(engine);\n\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n\n\n  const options = useMemo(\n    () => ({\n        background: {\n          color: {\n            value: rgb(37, 37, 37),\n          },\n        },\n        fpsLimit: 120,\n        interactivity: {\n          events: {\n            onClick: {\n              enable: true,\n              mode: \"repulse\",\n            },\n            onHover: {\n              enable: true,\n              mode: 'grab',\n            },\n          },\n          modes: {\n            push: {\n              distance: 200,\n              duration: 15,\n            },\n            grab: {\n              distance: 150,\n            },\n          },\n        },\n        particles: {\n          color: {\n            value: \"#FFFFFF\",\n          },\n          links: {\n            color: \"#FFFFFF\",\n            distance: 150,\n            enable: true,\n            opacity: 0.3,\n            width: 1,\n          },\n          move: {\n            direction: \"none\",\n            enable: true,\n            outModes: {\n              default: \"bounce\",\n            },\n            random: true,\n            speed: 1,\n            straight: false,\n          },\n          number: {\n            density: {\n              enable: true,\n            },\n            value: 150,\n          },\n          opacity: {\n            value: 1.0,\n          },\n          shape: {\n            type: \"circle\",\n          },\n          size: {\n            value: { min: 1, max: 3 },\n          },\n        },\n        detectRetina: true,\n      }),\n    [],\n  );\n\n\n  return <Particles id={props.id} init={particlesLoaded} options={options} />;\n};\n\nexport default ParticlesComponent;"],"mappings":";;AAAA,OAAOA,SAAS,IAAIC,mBAAmB,QAAQ,oBAAoB;AACnE,SAASC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAEpD,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEpC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAEvCF,SAAS,CAAC,MAAM;IACdD,mBAAmB,CAAC,MAAOY,MAAM,IAAK;MAEpC,MAAMR,QAAQ,CAACQ,MAAM,CAAC;IAExB,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACZF,OAAO,CAAC,IAAI,CAAC;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,eAAe,GAAIC,SAAS,IAAK;IACrCC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;EACxB,CAAC;EAGD,MAAMG,OAAO,GAAGhB,OAAO,CACrB,OAAO;IACHiB,UAAU,EAAE;MACVC,KAAK,EAAE;QACLC,KAAK,EAAEC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;MACvB;IACF,CAAC;IACDC,QAAQ,EAAE,GAAG;IACbC,aAAa,EAAE;MACbC,MAAM,EAAE;QACNC,OAAO,EAAE;UACPC,MAAM,EAAE,IAAI;UACZC,IAAI,EAAE;QACR,CAAC;QACDC,OAAO,EAAE;UACPF,MAAM,EAAE,IAAI;UACZC,IAAI,EAAE;QACR;MACF,CAAC;MACDE,KAAK,EAAE;QACLC,IAAI,EAAE;UACJC,QAAQ,EAAE,GAAG;UACbC,QAAQ,EAAE;QACZ,CAAC;QACDC,IAAI,EAAE;UACJF,QAAQ,EAAE;QACZ;MACF;IACF,CAAC;IACDG,SAAS,EAAE;MACTf,KAAK,EAAE;QACLC,KAAK,EAAE;MACT,CAAC;MACDe,KAAK,EAAE;QACLhB,KAAK,EAAE,SAAS;QAChBY,QAAQ,EAAE,GAAG;QACbL,MAAM,EAAE,IAAI;QACZU,OAAO,EAAE,GAAG;QACZC,KAAK,EAAE;MACT,CAAC;MACDC,IAAI,EAAE;QACJC,SAAS,EAAE,MAAM;QACjBb,MAAM,EAAE,IAAI;QACZc,QAAQ,EAAE;UACRC,OAAO,EAAE;QACX,CAAC;QACDC,MAAM,EAAE,IAAI;QACZC,KAAK,EAAE,CAAC;QACRC,QAAQ,EAAE;MACZ,CAAC;MACDC,MAAM,EAAE;QACNC,OAAO,EAAE;UACPpB,MAAM,EAAE;QACV,CAAC;QACDN,KAAK,EAAE;MACT,CAAC;MACDgB,OAAO,EAAE;QACPhB,KAAK,EAAE;MACT,CAAC;MACD2B,KAAK,EAAE;QACLC,IAAI,EAAE;MACR,CAAC;MACDC,IAAI,EAAE;QACJ7B,KAAK,EAAE;UAAE8B,GAAG,EAAE,CAAC;UAAEC,GAAG,EAAE;QAAE;MAC1B;IACF,CAAC;IACDC,YAAY,EAAE;EAChB,CAAC,CAAC,EACJ,EACF,CAAC;EAGD,oBAAO/C,OAAA,CAACP,SAAS;IAACuD,EAAE,EAAE9C,KAAK,CAAC8C,EAAG;IAAC5C,IAAI,EAAEI,eAAgB;IAACI,OAAO,EAAEA;EAAQ;IAAAqC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7E,CAAC;AAACjD,EAAA,CA5FIF,kBAAkB;AAAAoD,EAAA,GAAlBpD,kBAAkB;AA8FxB,eAAeA,kBAAkB;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}